[{"path":"index.html","id":"the-missing-many","chapter":"The Missing Many","heading":"The Missing Many","text":"NASSSP programs rolling across state, goal empower colleges acknowledge understand American Indian Alaska Native student population extends beyond reporting standards.\n:::Fall 2023, one seven Sierra College’s American Indian Alaska Native (AI/) reported MIS/IPEDS. 709 students AI/ancestry, 94 met requirements reported MIS AI/.American Indian Alaska Native students reported Hispanic/Latinx multiracial ancestry CCC application included state federal reporting AI/students. said, ’s critical institutions include students -site analytics demographics, even students identified state federal level.::::_Learn Native American Student Support Success Program (NASSSP)supplemental document Missing Many: Decoding MIS Categories Highlight Systemic Masking Native Students, presented RP Conference, 2024.following sections provide high-level overview race ethnicity data elements methodologies. discuss data Chancellor’s Office, including CCCApply MIS data formats. data sample AI/, multiracial AI/, Hispanic AI/students provided allow participants try techniques . Set analysis, including Euler UpSet plotting, applied shared well.","code":""},{"path":"definitions.html","id":"definitions","chapter":"1 Definitions","heading":"1 Definitions","text":"","code":""},{"path":"definitions.html","id":"ccc-apply","chapter":"1 Definitions","heading":"1.1 CCC Apply","text":"Race Ethnicity data primarily sourced CCC Application. latest copy CCCApply Data Dictionaries can found link:https://cccnext.jira.com/wiki/spaces/PD/pages/67043586/Data+DictionariesWe recommend downloading local copy CCCApply Standard & Noncredit Application Data Dictionary CCCApply International Application Data Dictionary. Data elements similar two, yet naming conventions based Standard Noncredit Application.","code":""},{"path":"definitions.html","id":"data-elements","chapter":"1 Definitions","heading":"1.1.1 Data Elements","text":"Two questions make Race/Ethnicity portion CCC Application:Hispanic/Latino?Hispanic/Latino?Race Groups: Check ethnicity, nation ancestry groups identify . select major ethnicity group, option select specific ancestry groups.Race Groups: Check ethnicity, nation ancestry groups identify . select major ethnicity group, option select specific ancestry groups.","code":""},{"path":"definitions.html","id":"mis-student-data-elements","chapter":"1 Definitions","heading":"1.2 MIS Student Data Elements","text":"Application data coded MIS reporting. See Student Data Elements (SB) :https://webdata.cccco.edu/ded/sb/sb.htmMIS reporting based SB29.21 codes rolled nine codes MIS reporting:Hispanic/LatinoAfrican American/BlackAmerican Indian/ Alaska NativeAsianFilipinoPacific IslanderWhiteMultiracialUnknown/DisclosedStudents indicate Hispanic/Latinx ancestry coded Hispanic/Latino. non-Hispanic students indicating multiple ancestries coded Multiracial. one exception: Filipino students also indicate another Asian ancestry coded Asian.","code":""},{"path":"definitions.html","id":"expanded-definitions","chapter":"1 Definitions","heading":"1.2.1 Expanded Definitions","text":"Expanded definitions, including expanding AI/tribal cultural affiliations, can found using SB38. Chancellor’s Office currently includes 115 different tribal cultural affiliations. list expected updated include federally recognized tribes bands.Note: application asking known ancestry, enrollment status. Many cultural groups, including Aztec, Cherokee, Chippewa, Navajo, Sioux, Zapotec, expanded distinct tribes bands.UPDATE April 03, 2024:American Indian Alaska Native data elements expanded.https://cccnext.jira.com/wiki/spaces/PD/pages/3390799873/2024+AIAN+Expansion+Enhancement++CCCApply","code":""},{"path":"sample-data.html","id":"sample-data","chapter":"2 Sample Data","heading":"2 Sample Data","text":"’ve pulled together sample data 715 mock students AI/ancestry. replicated data real student CCCID’s. CCCID code typically three letters followed four numbers, like ABC1234. ’ve replaced mock IDs use four letters, ABCD123, avoid unintentional overlap true students.sample data can found : data/studentSample.csvThis sample made three components: Data collected CCCApply, data MIS/IPEDS reporting, derived elements.","code":"\nlibrary(tidyverse) # For data manipulation\n\nstudents <- read.csv(\"data/studentSample.csv\")"},{"path":"sample-data.html","id":"application-and-reporting-data","chapter":"2 Sample Data","heading":"2.1 Application and Reporting Data","text":"CCCApply DataMIS/IPEDS ReportingNext institutional data elements MIS/IPEDS reporting. familiar, even column names little different:","code":"\n# Grab only the CCCApply columns, first 3 rows\nhead(\n  students[c(1,4:7)], 3\n)##     CCCID        RACE_ETHNICITY HISPANIC    RACE_ETHNIC_FULL  RACE_GROUP\n## 1 KCOO366 NNNNNNNNNNNNNNNYNNNNY     <NA>                <NA>        <NA>\n## 2 QEME965 NNNNNNNNNNNNNNNYNNNNY        N 300,325,800,804,806      16, 21\n## 3 HRNQ136 YYNNYNNNNNNNNNNYNNNNN        Y 100,111,117,300,418 01,02,05,16\n# Preview only the MIS/IPEDS elements, first 3 rows\nhead(\n  students[c(1:3)], 3\n)##     CCCID        ETHNIC_DESC ETHNIC_CODE\n## 1 KCOO366 Multiple Ethnicity           7\n## 2 QEME965 Multiple Ethnicity           7\n## 3 HRNQ136    Hispanic/Latinx           5"},{"path":"sample-data.html","id":"derived-elements","chapter":"2 Sample Data","heading":"2.2 Derived Elements","text":"Last 16 derived elements identify student ancestry, multiracial mult ancestry, given ancestry. latter reserved Hispanic/Latinx students without ancestries outside Latin America Spain, onlyHispLat. creates comparison group traditional Hispanic/Latinx MIS/IPEDS group.","code":"\n# Preview only the derived elements, first 3 rows \nhead(\n  students[c(1, 8:23)], 3\n)##     CCCID anyAABlack anyAIAN anyAsian anyFilipino anyHispLat anyPI anyMENA\n## 1 KCOO366          0       1        0           0          0     0       0\n## 2 QEME965          0       1        0           0          0     0       0\n## 3 HRNQ136          0       1        0           0          1     0       0\n##   anyWhite multAABlack multAIAN multAsian multFilipino multPI multMENA\n## 1        1           0        1         0            0      0        0\n## 2        1           0        1         0            0      0        0\n## 3        0           0        1         0            0      0        0\n##   multWhite onlyHispLat\n## 1         1           0\n## 2         1           0\n## 3         0           0"},{"path":"data-structures.html","id":"data-structures","chapter":"3 Data Structures","heading":"3 Data Structures","text":"","code":""},{"path":"data-structures.html","id":"building-an-expanded-raceethnicity-table","chapter":"3 Data Structures","heading":"3.1 Building An Expanded Race/Ethnicity Table","text":"","code":"/*\n * Initial build, bring in CCCApply and MIS data elements, \n * create placeholders for expanded elements.  \n */\n \nSELECT DISTINCT \n  CCCID, \n  ETHNIC_CODE,\n    ETHNIC_DESC, \n\n    RACE_ETHNICITY, \n    HISPANIC,\n    RACE_ETHNIC_FULL, \n    RACE_GROUP,\n\n    CAST(NULL AS VARCHAR(1)) AS anyAABlack, \n    CAST(NULL AS VARCHAR(1)) AS anyAIAN, \n    CAST(NULL AS VARCHAR(1)) AS anyAsian, \n    CAST(NULL AS VARCHAR(1)) AS anyFilipino, \n    CAST(NULL AS VARCHAR(1)) AS anyHispLat, \n    CAST(NULL AS VARCHAR(1)) AS anyPI, \n    CAST(NULL AS VARCHAR(1)) AS anyMENA,\n    CAST(NULL AS VARCHAR(1)) AS anyWhite, \n\n    CAST(NULL AS VARCHAR(1)) AS multAABlack, \n    CAST(NULL AS VARCHAR(1)) AS multAIAN, \n    CAST(NULL AS VARCHAR(1)) AS multAsian, \n    CAST(NULL AS VARCHAR(1)) AS multFilipino, \n    CAST(NULL AS VARCHAR(1)) AS multPI, \n    CAST(NULL AS VARCHAR(1)) AS multMENA,\n    CAST(NULL AS VARCHAR(1)) AS multWhite, \n    \n    CAST(NULL AS VARCHAR(1)) AS onlyHispLat \n\nINTO ETHNICITY_TABLE\nFROM SOURCE_TABLE;  "},{"path":"data-structures.html","id":"derived-elements-1","chapter":"3 Data Structures","heading":"3.1.1 Derived Elements","text":"derived elements build SQL using series case statements.statement checks MIS/IPEDS ETHNIC_CODE 21-code RACE_ETHNICITY given criteria. full coding can found : data/ETHNICITY_TsABLE-UPDATE.txtany codes looking shared ancestry parent group. sample , students African American Black ancestry. first check MIS ETHNIC_CODE = 1, primary indicator African American Black students, look Y indicator 15th spot SB29 code, RACE_ETHNICITY.mult codes classification indicates student Hispanic Multiracial shared ancestry parent group. two values currently combined, ’s intent break separate groups. criteria similar groups: first check MIS ETHNIC_CODEs 5 7, Hispanic Multiracial Y indicator 15th spot SB29 code, RACE_ETHNICITY.one case called , onlyHispLat. Given multiracial nature Hispanic/Latinx MIS category, wanted comparison group identify Hispanic Latinx students solely Latin American Spanish ancestry. helped create balance similar ancestries.","code":"anyAABlack = \n  CASE WHEN \n              (ETHNIC_CODE in ('1') --PRIMARY\n                OR SUBSTRING(RACE_ETHNICITY,15,1) LIKE '%Y%') THEN 1 \n       ELSE 0\n           ENDmultAABlack = CASE WHEN \n        (ETHNIC_CODE in ('5','7') --PRIMARY\n        AND SUBSTRING(RACE_ETHNICITY,15,1) LIKE '%Y%') THEN 1 \n        ELSE 0\n        ENDonlyHispLat =  CASE WHEN \n        SUBSTRING(RACE_ETHNICITY, 1,5) like '%Y%' \n            AND SUBSTRING(RACE_ETHNICITY, 6,21) NOT LIKE '%Y%' THEN 1 \n        ELSE 0\n        END"},{"path":"data-structures.html","id":"unpivoted-data-for-brilliant-filtering","chapter":"3 Data Structures","heading":"3.2 Unpivoted Data for Brilliant Filtering","text":"See SQL code : data/PivotDemographics.txtUnpivot functions turn wide data long data. student sample dataset, student one line. Unpivoted datasets combine information three column structure: CCCID, Demographic, Attributes. Every student one line every demographic marker.office found structure particularly valuable dashboard filters. ability multi-select Attributes Multiple Ethnicity M/H African American/Black, example, require two filters (slicers PowerBI) order narrow list number students. list can expanded demographic markers, aware quickly dataset grow. math straightforward: take number students dataset multiply number demographics want filter . example, 1,000 students 9 markers require 9,000 lines. 20 markers, ’ll need 20,000 lines.","code":""},{"path":"euler-plots.html","id":"euler-plots","chapter":"4 Euler Plots","heading":"4 Euler Plots","text":"SummaryEuler plots excellent exploratory tool visualizing shared ancestries. Since combinations increase exponentially, ’s essential choose starting set carefully. today’s purposes, ’re limiting groups eight ancestries, students sharing AI/ancestry.errors may increase number combinations, valuable high-level insight gained complex figures. ’ll notice examples notable stubbornness plots visualizing students combined Black & Hispanic ancestry. recommendation use Euler plots exploring data, UpSet plots may better tool sharing information.Euler Plots require package eulerr.Please see package documentation introductory examples reference manuals:https://cran.r-project.org/web/packages/eulerr/index.htmlWe’ll use derived data elements Euler plots.first example ’ll share details overlap White Hispanic ancestries among Native students.plot , limited dataframe three columns using bracket notation, anyAIAN[c(2,5,8)]. format asking second, fifth, eighth columns dataframe called anyAIAN. example , can call function without limiting columns, euler(anyAIAN).Heads ! Increasing number variables lead errors missing data. sure match sum combinations shown total headcount.","code":"\n# Area proportional Euler diagrams \n#install.packages(\"eulerr\")\nlibrary(eulerr)\nset.seed(2271)\n# Create a reduced size data frame with just the `any` elements in it, cols 9-15. \nanyAIAN <- students[8:15] \n\n# Show the first three rows\nhead(anyAIAN, 3) ##   anyAABlack anyAIAN anyAsian anyFilipino anyHispLat anyPI anyMENA anyWhite\n## 1          0       1        0           0          0     0       0        1\n## 2          0       1        0           0          0     0       0        1\n## 3          0       1        0           0          1     0       0        0\n# Build a plot showing the overlap between: \n# Native students (col 2) with any HispLat (col 5) or White (col 8) ancestry \nv <- euler(anyAIAN[c(2,5,8)], shape = \"ellipse\")\npar(cex = 1) # Font size: 100% \nplot(v, \n     main = \"Multiracial Native Students\",       # Plot Title \n     cex.main = 1.5,                             # Title size (150% of body text)\n     quantities = TRUE,                          # Show how many are in each group\n     fills = c( \"#ECECEC\", \"#F7D988\", \"#FFFFFF\"),# Use custom group colors \n     labels = c(\"AI/AN\", \"Hispanic\", \"White\"),   # Labels; in order of group above\n     legend = list(side = \"right\")               # Legend position, if any\n     )\n# Want to throw the whole kitchen sink at it? \n\nv <- euler(anyAIAN, shape = \"ellipse\")\npar(cex = 1) # Font size: 100% \nplot(v, \n     main = \"Multiracial Native Students\",       # Plot Title \n     cex.main = 1.5,                             # Title size (150% of body text)\n     quantities = TRUE,                          # Show how many are in each group\n     fills = c(\"#AF2424\",\"#ECECEC\", \"#6194A8\",  # Eight colors for eight groups\n               \"#9952A3\",\"#F7D988\", \"#94b9A9\",\n               \"#C2D5A6\",\"#FFFFFF\" ),\n     #labels,                                    # Omitting labels for complex plots\n     legend = list(side = \"right\")               # Legend position, if any\n     )"},{"path":"euler-plots.html","id":"diagnostics-for-euler-plots","chapter":"4 Euler Plots","heading":"4.1 Diagnostics for Euler Plots","text":"three sets intersecting, exact Euler diagrams often impossible. cases eulerr attempts provide good approximation numerically tuning parameters ellipses circles minimize error resulting diagram.’ve increased possible number combinations 7 three elements (\\(2^3 -1\\)) first plot 255 combinations 8 elements (\\(2^8-1\\)). said, combinations utilized. Particularly, students sharing AI/ancestry won’t single, standalone ancestry groups (.e. AA/Black, Asian, ). given data design, MENA always nested White students exclusive subgroup well.show combinations, can call different elements list built euler plot, v. element original.values list true combinations.List element fitted.values number values plotted. Fitted values may integers, rather area allocated within ellipse given group. said, fitted value zero original value , whole group missing entirely. Let’s find groups.Ten students combined AI/, Black, Hispanic backgrounds omitted visual. Five AI/, Pacific Islander, White combined ancestries also missing. Several groups, notably handful including Filipino ancestry, missing well.Dot charts quick way visualize missing values.note built-residualsFitted values interesting. design, ellipses areas underestimation. Underestimations arguably valuable us context student groups missing visual.find underestimations, missingness, ’re essentially pulling residuals groups know one student. Residuals difference original true value combination fitted value. Overestimation happens fitted values true. best example overlap sections outside anyAIAN plot area, best seen tip anyAABlack ellipse. residuals built euler can accessed using function resid().","code":"\n# Show me the combinations of students I have in this dataset. \nhead(\n  v$original.values[v$original.values >0],     # Show groups with at least one student\n  10)                                          # Only the first 10 in the list##                       anyAIAN            anyAABlack&anyAIAN \n##                            92                            18 \n##              anyAIAN&anyAsian           anyAIAN&anyFilipino \n##                             3                             2 \n##            anyAIAN&anyHispLat                 anyAIAN&anyPI \n##                           120                             4 \n##              anyAIAN&anyWhite anyAABlack&anyAIAN&anyHispLat \n##                           234                            10 \n##      anyAABlack&anyAIAN&anyPI   anyAABlack&anyAIAN&anyWhite \n##                             1                            32\n# How many combinations am I visualizing? \nNROW( v[v$original.values >0])## [1] 35\n# So who is missing? \n# Create a subset of missing students \nmissing <- subset(\n    v$original.values,       # Show the group-counts of students\n      v$fitted.values == 0 & # Who are completely missing\n      v$original.values >0   # Yet should be represented \n)\n\n# Count up all our missing students\nsum(missing)## [1] 37\n# What groups are completely omitted on the plot\nmissing##                                         anyAIAN&anyFilipino \n##                                                           2 \n##                               anyAABlack&anyAIAN&anyHispLat \n##                                                          10 \n##                                    anyAABlack&anyAIAN&anyPI \n##                                                           1 \n##                                anyAIAN&anyAsian&anyFilipino \n##                                                           1 \n##                                anyAIAN&anyFilipino&anyWhite \n##                                                           3 \n##                                    anyAIAN&anyHispLat&anyPI \n##                                                           2 \n##                                      anyAIAN&anyPI&anyWhite \n##                                                           5 \n##                           anyAABlack&anyAIAN&anyPI&anyWhite \n##                                                           2 \n##                       anyAIAN&anyAsian&anyFilipino&anyWhite \n##                                                           2 \n##                           anyAIAN&anyAsian&anyMENA&anyWhite \n##                                                           2 \n##                           anyAIAN&anyHispLat&anyPI&anyWhite \n##                                                           2 \n##                anyAABlack&anyAIAN&anyHispLat&anyPI&anyWhite \n##                                                           2 \n##                  anyAIAN&anyAsian&anyHispLat&anyPI&anyWhite \n##                                                           1 \n## anyAABlack&anyAIAN&anyAsian&anyFilipino&anyHispLat&anyWhite \n##                                                           1 \n##      anyAIAN&anyAsian&anyFilipino&anyHispLat&anyPI&anyWhite \n##                                                           1\n# Show how many students are missing from each group, use resid() for orig minus fitted.\n\ndotchart(missing[order(missing)])\n# What is the overall residual (over & underestimation)\nsum(resid(v))## [1] 34.14297"},{"path":"euler-plots.html","id":"options-to-improve-euler-plotting","chapter":"4 Euler Plots","heading":"4.1.0.1 Options to Improve Euler Plotting","text":"Combining ancestries can help maintain level storytelling without omitting students. example, combining Filipino, Asian, Pacific Islander along re-combination MENA White reduce complexity eighth original; 31 (\\(2^5 -1\\)) combinations versus 255 (\\(2^8 -1\\)).said, sure share disaggregated values well.","code":"\n# Create a new column combining Asian and Filipino, tidyverse it\n# The MENA, White combo is already baked in. All MENA are also tagged White for now.\nanyCombined <- anyAIAN %>% \n  mutate(anyAsianFilipinoPI = ifelse(anyAsian|anyFilipino|anyPI, 1, 0)) %>% # Asian, Filipino, combo\n  select(-anyAsian, -anyFilipino,-anyPI, -anyMENA)                         # Drop combined columns to avoid dups\n# A little simpler, still not simple.\n# You'll notice this runs quite a bit quicker, too. \nv <- euler(anyCombined, shape = \"ellipse\")\npar(cex = 1) # Font size: 100% \nplot(v, \n     main = \"Multiracial Native Students\",       # Plot Title \n     cex.main = 1.5,                             # Title size (150% of body text)\n     quantities = TRUE,                          # Show how many are in each group\n     fills = c(\"#AF2424\",\"#ECECEC\",\"#F7D988\",    # Six colors for six groups\n               \"#FFFFFF\",\"#6194A8\" ),\n     #labels,                                    # Omitting labels for complex plots\n     legend = list(side = \"right\")               # Legend position, if any\n     )\n# Check diagnostics\n# Let's check for missing students again\nmissing <- subset(\n    v$original.values,       # Show the group-counts of students\n      v$fitted.values == 0 & # Who are completely missing\n      v$original.values >0   # Yet should be represented \n)\n\n# How many students didn't get plotted?\nsum(missing)## [1] 11\n# Who is missing\nmissing ##         anyAABlack&anyAIAN&anyHispLat anyAABlack&anyAIAN&anyAsianFilipinoPI \n##                                    10                                     1\n# Plot them\ndotchart(missing[order(missing)])"},{"path":"upset-plots.html","id":"upset-plots","chapter":"5 UpSet Plots","heading":"5 UpSet Plots","text":"UpSet plots require package UpSetR.Please see package documentation introductory examples reference manuals:https://CRAN.R-project.org/package=UpSetRWe’ll use derived data elements UpSet plots. See section Sample Data details.UpSet plots can take larger combination sets create detail rich displays. plot AI/students ancestral make-ups.\nmain bar plot details number student given combination intersection. dots main bar plot ancestry combinations. figure, common ancestry combination White AI/.Notice every student represented plot AI/ancestry. smaller, horizontal bar plot left ancestry counts number students share ancestry. UpSet refers groupings sets counts set frequencies.715 total AI/students, 453 White ancestry, 291 Hispanic/Latinx ancestry. White Hispanic ancestry large drop students share African American/Black, Asian, Filipino Pacific Islander ancestry. small groups aren’t lost like Euler plots!figure limited top 15 combination. aren’t tie-breaker rules , like case, 15th 16th combination size. expand figure values, omit nintersects variable upset() function.Queries interesting addition UpSet plots. can get complicated hurry, though. vignette can found : Querying Data","code":"\n#install.packages(\"UpSetR\")\nlibrary(UpSetR)\n# Create a reduced size data frame with just the `any` elements in it, cols 9-15. \nanyAIAN <- students[8:15] \n\n# Show the first three rows\nhead(anyAIAN, 3) ##   anyAABlack anyAIAN anyAsian anyFilipino anyHispLat anyPI anyMENA anyWhite\n## 1          0       1        0           0          0     0       0        1\n## 2          0       1        0           0          0     0       0        1\n## 3          0       1        0           0          1     0       0        0\npar(mar = c(0, 2, 2, 2))                  # Set margin size. \nupset(anyAIAN,                            # Plot our AI/AN student df\n      sets = c(\"anyAIAN\",\"anyAABlack\",    # UpSet requires us to create \n               \"anyAsian\", \"anyFilipino\", #   a list of combinations \n               \"anyPI\", \"anyWhite\",\n               \"anyHispLat\"), \n      nintersects = 15,                   # Show the n largest combinations\n      set_size.show = T,                  # Show the counts (x-axis)\n      order.by = \"freq\",                  # Order by most common\n      sets.x.label = \"Distinct Students\", # Add titles \n      mainbar.y.label = \"Distinct Students\", \n      text.scale = \n        c(1.3, 1.3, 1, 1, 1.3, 1.5)       # Adjust text sizes for plot\n)\nupset(anyAIAN,                            # Plot our AI/AN student df\n      sets = c(\"anyAIAN\",\"anyAABlack\",    # UpSet requires us to create \n               \"anyAsian\", \"anyFilipino\", #   a list of combinations \n               \"anyPI\", \"anyWhite\",\n               \"anyHispLat\"), \n      #nintersects = 15,                  # Omit n largest combo filter\n      set_size.show = T,                  # Show the counts (x-axis)\n      order.by = \"freq\",                  # Order by most common\n      sets.x.label = \"Distinct Students\", # Add titles \n      mainbar.y.label = \"Distinct Students\", \n      text.scale = \n        c(1.3, 1.3, 1, 1, 1.3, 1.5)       # Adjust text sizes for plot\n)\nupset(anyAIAN,                            # Plot our AI/AN student df\n      sets = c(\"anyAIAN\",\"anyAABlack\",    # UpSet requires us to create \n               \"anyAsian\", \"anyFilipino\", #   a list of combinations \n               \"anyPI\", \"anyWhite\",\n               \"anyHispLat\"), \n      set_size.show = T,                   # Show the counts (x-axis)\n      order.by = \"freq\",                   # Order by most common\n      cutoff = 3, \n      sets.x.label = \"Distinct Students\",  # Add titles \n      mainbar.y.label = \"Distinct Students\", \n      text.scale = \n        c(1.3, 1.3, 1, 1, 1.3, 1.5),       # Adjust text sizes for plot\n      \n      # Query! Must be a list of lists. \n      queries = list(\n                  list(query = intersects, # Highlight intersections\n                  params = \"anyAIAN\",      # Showing our MIS AI/AN\n                  color = \"goldenrod\",   \n                  active = T)\n      )\n)"}]
